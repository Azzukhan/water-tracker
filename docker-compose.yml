services:
  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    image: uk-water-tracker-backend:latest
    ports: ["8000:8000"]
    environment:
      DJANGO_DEBUG: "True"
      DJANGO_SECRET_KEY: dev-secret-key-change-in-production-please
      ALLOWED_HOSTS: localhost,127.0.0.1,backend
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://127.0.0.1:3000
      DATABASE_URL: "sqlite:////app/db.sqlite3"        
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    volumes:
      - ./backend:/app                                   
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/ || wget -qO- http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  celery-worker:
    image: uk-water-tracker-backend:latest              
    working_dir: /app
    command: celery -A uk_water_tracker worker --loglevel=info --concurrency=2
    environment:
      DJANGO_DEBUG: "True"
      DJANGO_SECRET_KEY: dev-secret-key-change-in-production-please
      DATABASE_URL: "sqlite:////app/db.sqlite3"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    volumes:
      - ./backend:/app
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_started
    restart: unless-stopped

  celery-beat:
    image: uk-water-tracker-backend:latest
    working_dir: /app
    command: celery -A uk_water_tracker beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      DJANGO_DEBUG: "True"
      DJANGO_SECRET_KEY: dev-secret-key-change-in-production-please
      DATABASE_URL: "sqlite:////app/db.sqlite3"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    volumes:
      - ./backend:/app
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_started
    restart: unless-stopped

  flower:
    image: uk-water-tracker-backend:latest
    working_dir: /app
    command: celery -A uk_water_tracker flower --port=5555
    ports: ["5555:5555"]
    environment:
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    depends_on:
      - redis
      - celery-worker
    restart: unless-stopped

  frontend:
    image: node:18-alpine
    working_dir: /app
    ports: ["3000:3000"]
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_BASE_URL: "http://localhost:8000"  
      BACKEND_INTERNAL_URL: "http://backend:8000"        
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: sh -c "npm install && npm run dev"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  redis_data:
